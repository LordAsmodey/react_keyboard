{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressAnyKey","event","setState","key","document","addEventListener","this","removeEventListener","className","length","Component","ReactDOM","render","getElementById"],"mappings":"2MASaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZH,WAAYE,EAAME,OAfxB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACoC,IAAjCF,KAAKR,MAAMC,WAAWU,OACnB,0BADH,mCAE+BH,KAAKR,MAAMC,WAF1C,aAvBX,GAAyBW,a,MCJzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c470b47d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n};\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<Props, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressAnyKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.pressAnyKey);\n  }\n\n  pressAnyKey = (event: KeyboardEvent) => {\n    this.setState({\n      pressedKey: event.key,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey.length === 0\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${this.state.pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}